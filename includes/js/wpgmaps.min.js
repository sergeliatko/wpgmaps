(function(b,a){let mapPlaceholderContainers;let mapPlaceholderWidth=function(c){let width=c.getAttribute("data-width");if(width===null||width===""){width=c.clientWidth||640}return parseInt(width)};let mapPlaceholderHeight=function(c){let height=c.getAttribute("data-height");if(height===null||height===""){height=c.clientHeight||480}return parseInt(height)};a.addEventListener("DOMContentLoaded",function(){mapPlaceholderContainers=a.querySelectorAll("div.wpgmap");if(mapPlaceholderContainers.length>0){for(let i=0;i<mapPlaceholderContainers.length;i++){let width=mapPlaceholderWidth(mapPlaceholderContainers[i]);let height=mapPlaceholderHeight(mapPlaceholderContainers[i]);mapPlaceholderContainers[i].setAttribute("data-width",width.toString());mapPlaceholderContainers[i].setAttribute("data-height",height.toString())}}});b.addEventListener("load",function(){let infoWindow;let mapLoader=false;let isHighDensity=function(){let minResolutionQuery="only screen and (min-resolution: 124dpi), only screen and (min-resolution: 1.3dppx), only screen and (min-resolution: 48.8dpcm)";let devicePixelRatioQuery="only screen and (-webkit-min-device-pixel-ratio: 1.3), only screen and (-o-min-device-pixel-ratio: 1.3), only screen and (min--moz-device-pixel-ratio: 1.3), only screen and (min-device-pixel-ratio: 1.3)";return((b.devicePixelRatio&&b.devicePixelRatio>1.3)||(b.matchMedia&&(b.matchMedia(minResolutionQuery).matches||b.matchMedia(devicePixelRatioQuery).matches)))};let getScale=function(){return isHighDensity()?"2":"1"};let translateLocation=function(c){return new google.maps.LatLng(parseFloat(c.latitude),parseFloat(c.longitude))};let getMapHorizontalPadding=function(c){return Math.round(c.clientWidth*0.05)};let getMapVerticalPadding=function(c){return Math.round(c.clientHeight*0.05)};let initMapLoader=function(c){if(!mapLoader){let loader=a.createElement("script");loader.type="text/javascript";loader.async=true;loader.src=wpgmaps.loaderUrl;loader.onload=function(){mapLoader=true;b.setTimeout(function(){loadDynamicMap(c)},250)};let location=a.getElementsByTagName("script")[0];location.parentNode.insertBefore(loader,location)}};let loadDynamicMap=function(c){if(!mapLoader){initMapLoader(c);return}let mapContainer=c.parentNode;let mapKey=mapContainer.getAttribute("data-key");let mapData=wpgmaps.maps[mapKey];let loader=new google.maps.plugins.loader.Loader({apiKey:mapData.key,version:"weekly",id:"wpgmaps-dynamic-maps"});c.remove();loader.load().then(function(){if(undefined===infoWindow){infoWindow=new google.maps.InfoWindow()}let mapElement=a.createElement("div");mapElement.id=mapContainer.id+"-dynamic";mapElement.className="wpgmap-dynamic";mapContainer.appendChild(mapElement);let map=new google.maps.Map(mapElement,{});let bounds=new google.maps.LatLngBounds();mapData.pins.forEach(function(d){let marker=new google.maps.Marker({position:translateLocation(d.marker.location),title:d.marker.title,map:map});marker.infowindow=d.window;google.maps.event.addListener(marker,"click",(function(e){return function(){infoWindow.setContent(e.infowindow);infoWindow.open(e.map,e)}})(marker));bounds.extend(marker.position)});map.fitBounds(bounds,{bottom:getMapVerticalPadding(mapElement),left:getMapHorizontalPadding(mapElement),right:getMapHorizontalPadding(mapElement),top:getMapVerticalPadding(mapElement)});map.setCenter(bounds.getCenter());if(""!==mapData.zoom){let zoomHandler=google.maps.event.addListener(map,"idle",function(){map.setZoom(parseInt(mapData.zoom));google.maps.event.removeListener(zoomHandler)})}})};let loadStaticMap=function(c){let staticMap=c.querySelector(".wpgmap-static");if(null===staticMap){console.log("no static map placeholder found in #"+c.id);return}let width=mapPlaceholderWidth(c);let height=mapPlaceholderHeight(c);let scale=getScale();let url=staticMap.getAttribute("data-url")+"&scale="+scale+"&size="+width.toString()+"x"+height.toString();staticMap.style.backgroundImage="url("+url+")";staticMap.addEventListener("click",function(d){d.preventDefault();loadDynamicMap(this)})};let InitStaticMaps=function(){if(mapPlaceholderContainers.length>0){for(let i=0;i<mapPlaceholderContainers.length;i++){let eventName=mapPlaceholderContainers[i].getAttribute("data-event");if(eventName===""||eventName===null){loadStaticMap(mapPlaceholderContainers[i])}else{let mapPlaceholderContainer=mapPlaceholderContainers[i];b.addEventListener(eventName,function(){loadStaticMap(mapPlaceholderContainer)})}}}};b.setTimeout(InitStaticMaps,1000)})})(window,document);